---
- name: "stopping postgres"
  ansible.builtin.systemd_service:
    state: stopped
    name: "{{ service_name }}"
  when: is_primary

- name: "bootstrap database"
  ansible.builtin.include_tasks:
    file: bootstrap.yml

- name: "copy previous postgresql.conf"
  ansible.builtin.copy:
    src: "{{ postgres_data_base_dir }}/{{ previous_postgres_version }}/postgresql.conf"
    remote_src: true
    dest: "{{ postgres_data_base_dir }}/{{ postgres_version }}/postgresql.conf"
    owner: postgres
    mode: '0600'

- name: "copy previous postgresql.conf"
  ansible.builtin.copy:
    src: "{{ postgres_data_base_dir }}/{{ previous_postgres_version }}/pg_hba.conf"
    remote_src: true
    dest: "{{ postgres_data_base_dir }}/{{ postgres_version }}/pg_hba.conf"
    owner: postgres
    mode: '0600'

- name: "start db"
  ansible.builtin.command: /usr/lib/postgresql/{{ previous_postgres_version }}/bin/pg_ctl -D {{ postgres_data_base_dir }}/{{ previous_postgres_version }} start --options="-c listen_addresses='' -c archive_mode=off -c shared_preload_libraries=''"
  become: yes
  become_user: postgres

- name: "stop db"
  ansible.builtin.command: /usr/lib/postgresql/{{ previous_postgres_version }}/bin/pg_ctl -D {{ postgres_data_base_dir }}/{{ previous_postgres_version }} stop --timeout 60
  become: yes
  become_user: postgres

- name: "upgrade pg"
  ansible.builtin.command: /usr/lib/postgresql/{{ postgres_version }}/bin/pg_upgrade --username {{ superuser_username }} --old-options "-c archive_mode=off -c shared_preload_libraries=''" --old-datadir={{ postgres_data_base_dir }}/{{ previous_postgres_version }} --new-datadir={{ postgres_data_base_dir }}/{{ postgres_version }}/ --old-bindir=/usr/lib/postgresql/{{ previous_postgres_version }}/bin --new-bindir=/usr/lib/postgresql/{{ postgres_version }}/bin
  become: yes
  become_user: postgres

- name: "upgrade stanza"
  ansible.builtin.command: pgbackrest --stanza={{ stanza_name }} --no-online stanza-upgrade
