---
- name: "populate k3s node facts"
  ansible.builtin.set_fact:
    k3s_node_private_ip: "{{ (ansible_all_ipv4_addresses | ansible.utils.ipaddr(nodes_cidr))[0] }}"

- name: "populate service facts"
  ansible.builtin.service_facts:

- name: "enforce minimum ansible version"
  ansible.builtin.assert:
    that:
      - ansible_version.full is version('2.14', '>=')
    msg: "minimum ansible-core version required is 2.14"

- name: "install required packages"
  ansible.builtin.apt:
    name: policycoreutils
    update_cache: true

- name: "enable IPv4 forwarding"
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: true

- name: "enable IPv6 forwarding"
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: true
  when: ansible_all_ipv6_addresses

- name: "create k3s config dir"
  ansible.builtin.file:
    path: "/etc/rancher/k3s/"
    state: directory
    mode: '0700'

- name: "get k3s installed version"
  ansible.builtin.command: k3s --version
  register: k3s_installed_version_output
  changed_when: false
  ignore_errors: true

- name: "set k3s installed version"
  when: k3s_installed_version_output.rc == 0
  ansible.builtin.set_fact:
    k3s_installed_version: "{{ k3s_installed_version_output.stdout_lines[0].split(' ')[2] }}"

- name: "download k3s artifacts"
  when: k3s_installed_version_output.rc != 0 or k3s_installed_version is version(k3s_version, '<')
  block:
    - name: download k3s binary x64
      ansible.builtin.get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
        checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
        dest: /usr/local/bin/k3s
        owner: root
        group: root
        mode: "0755"
      when: ansible_facts.architecture == "x86_64"

    - name: download k3s binary arm64
      ansible.builtin.get_url:
        url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s-arm64
        checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-arm64.txt
        dest: /usr/local/bin/k3s
        owner: root
        group: root
        mode: "0755"
      when:
        - ( ansible_facts.architecture is search("arm") and ansible_facts.userspace_bits == "64" )
          or ansible_facts.architecture is search("aarch64")
