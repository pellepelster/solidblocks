  - name: "prepare Cilium CLI on first master and deploy CNI"
    when: inventory_hostname == groups['k3s_servers'][0]
    run_once: true
    block:
      - name: create tmp directory
        ansible.builtin.file:
          path: /tmp/k3s
          state: directory
          owner: root
          group: root
          mode: "0755"

      - name: check if cilium CLI is installed
        ansible.builtin.command: cilium version
        register: cilium_cli_installed
        failed_when: false
        changed_when: false
        ignore_errors: true

      - name: check for cilium CLI version in command output
        ansible.builtin.set_fact:
          installed_cli_version: >-
            {{
              cilium_cli_installed.stdout_lines
              | join(' ')
              | regex_findall('cilium-cli: (v\d+\.\d+\.\d+)')
              | first
              | default('unknown')
            }}
        when: cilium_cli_installed.rc == 0

      - name: get latest stable cilium CLI version file
        ansible.builtin.get_url:
          url: https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
          dest: /tmp/k3s/cilium-cli-stable.txt
          owner: root
          group: root
          mode: "0755"

      - name: read cilium CLI stable version from file
        ansible.builtin.command: cat /tmp/k3s/cilium-cli-stable.txt
        register: cli_ver
        changed_when: false

      - name: log installed cilium CLI version
        ansible.builtin.debug:
          msg: "installed cilium CLI version: {{ installed_cli_version | default('Not installed') }}"

      - name: log latest stable Cilium CLI version
        ansible.builtin.debug:
          msg: "latest cilium CLI version: {{ cli_ver.stdout }}"

      - name: determine if cilium CLI needs installation or update
        ansible.builtin.set_fact:
          cilium_cli_needs_update: >-
            {{
              cilium_cli_installed.rc != 0 or
              (cilium_cli_installed.rc == 0 and
              installed_cli_version != cli_ver.stdout)
            }}

      - name: install or update cilium CLI
        when: cilium_cli_needs_update
        block:
          - name: set architecture variable
            ansible.builtin.set_fact:
              cli_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

          - name: download cilium CLI and checksum
            ansible.builtin.get_url:
              url: "{{ cilium_base_url }}/cilium-linux-{{ cli_arch }}{{ item }}"
              dest: /tmp/k3s/cilium-linux-{{ cli_arch }}{{ item }}
              owner: root
              group: root
              mode: "0755"
            loop:
              - .tar.gz
              - .tar.gz.sha256sum
            vars:
              cilium_base_url: https://github.com/cilium/cilium-cli/releases/download/{{ cli_ver.stdout }}

          - name: verify the downloaded tarball
            ansible.builtin.shell: |
              cd /tmp/k3s && sha256sum --check cilium-linux-{{ cli_arch }}.tar.gz.sha256sum
            args:
              executable: /bin/bash
            changed_when: false

          - name: extract Cilium CLI to /usr/local/bin
            ansible.builtin.unarchive:
              src: /tmp/k3s/cilium-linux-{{ cli_arch }}.tar.gz
              dest: /usr/local/bin
              remote_src: true

          - name: Remove downloaded tarball and checksum file
            ansible.builtin.file:
              path: "{{ item }}"
              state: absent
            loop:
              - /tmp/k3s/cilium-linux-{{ cli_arch }}.tar.gz
              - /tmp/k3s/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum

      - name: add cilium chart repo
        kubernetes.core.helm_repository:
          name: cilium
          repo_url: "https://helm.cilium.io/"

      - name: create cilium values.yml
        ansible.builtin.template:
          src: cilium.values.yml.j2
          dest: "/root/cilium.values.yml"
          owner: root
          group: root
          mode: "0644"

      - name: deploy cilium chart
        kubernetes.core.helm:
          name: cilium
          chart_ref: cilium/cilium
          release_namespace: kube-system
          chart_version: "{{ cilium_version }}"
          kubeconfig: "/etc/rancher/k3s/k3s.yaml"
          values_files:
            - "/root/cilium.values.yml"
