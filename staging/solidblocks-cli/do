#!/usr/bin/env bash

set -eu

DIR="$(cd "$(dirname "$0")" ; pwd -P)"

source "${DIR}/../../lib/utils.sh"

export VERSION="$(version)"

BUILD_TARGET=${BUILD_TARGET:-linux-amd64}

function task_usage {
  echo "Usage: $0 ..."
  exit 1
}

function task_test {
  if [[ "${SKIP_TESTS:-}" == "true" ]]; then
    exit 0
  fi

  ${DIR}/gradlew check
}

function task_test_integration {
  if [[ "${SKIP_TESTS:-}" == "true" ]]; then
    exit 0
  fi

  (
    cd ${DIR}/test/no_workflow_file

    divider_header "no_workflow_file -> check"
    "${DIR}/blks_${BUILD_TARGET}" workflow check || true
    divider_footer

    divider_header "no_workflow_file --> --help"
    "${DIR}/blks_${BUILD_TARGET}" workflow --help
    divider_footer
  )

  (
    cd ${DIR}/test/testbed1

    divider_header "testbed1 --> workflow --help"
    "${DIR}/blks_${BUILD_TARGET}" workflow --help
    divider_footer

    divider_header "testbed1 --> workflow example"
    "${DIR}/blks_${BUILD_TARGET}" workflow example
    divider_footer

    divider_header "testbed1 --> workflow check"
    "${DIR}/blks_${BUILD_TARGET}" workflow check
    divider_footer
  )

  (
     cd ${DIR}/test/testbed2

    divider_header "testbed2 --> workflow check"
    "${DIR}/blks_${BUILD_TARGET}" workflow check || true
    divider_footer
  )
}

function divider_header() {
  echo "==================================================================================="
  echo $@
  echo "-----------------------------------------------------------------------------------"
}

function divider_footer() {
  echo "==================================================================================="
  echo ""
  echo ""
}

function task_build {
  ${DIR}/gradlew "${BUILD_TARGET}Binaries"
  mv "${DIR}/build/bin/${BUILD_TARGET}/releaseExecutable/solidblocks-cli.kexe" "${DIR}/blks_${BUILD_TARGET}"
}

function task_clean {
  ${DIR}/gradlew clean
}

arg=${1:-}
shift || true
case ${arg} in
  build) task_build "$@" ;;
  test) task_test "$@" ;;
  test-integration) task_test_integration "$@" ;;
  format) ;;
  clean) task_clean "$@" ;;
  *) task_usage ;;
esac