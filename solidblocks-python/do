#!/usr/bin/env bash

set -eu

DIR="$(cd "$(dirname "$0")" ; pwd -P)"

source "${DIR}/../lib/utils.sh"
export VERSION="$(version)"

TEMP_DIR="${DIR}/.temp_$$"

function clean_temp_dir {
  rm -rf "${TEMP_DIR}"
}

trap clean_temp_dir EXIT

source "${DIR}/../solidblocks-shell/lib/log.sh"
source "${DIR}/../solidblocks-shell/lib/python.sh"

function task_clean() {
    rm -rf ${DIR}/build
    rm -rf ${DIR}/tests/terraform/*.terraform*
    rm -rf ${DIR}/tests/terraform/*.tfstate*
    rm -rf ${DIR}/tests/tofu/.terraform*
    rm -rf ${DIR}/tests/tofu/.tfstate*
}

function task_test() {
  (
    cd "${DIR}"
    export NON_EXISTING_OVERRIDE="non_existing_override"
    export CUSTOM_ENV_NAME="custom_env_name"
    export OVERRIDE_PASSWORD="override_password"

    poetry run pytest -s $@
  )
}

function task_build() {
  (
    cd "${DIR}"
    poetry version "${VERSION#"v"}"
    poetry install
    poetry build -vvv --clean --output=${DIR}/build
    mv ${DIR}/build/solidblocks_do-*.tar.gz ${DIR}/build/solidblocks_do-v${VERSION}.tar.gz
    mv ${DIR}/build/solidblocks_do-*-py3-none-any.whl ${DIR}/build/solidblocks_do-v${VERSION}-py3-none-any.whl
  )
}

function task_release_prepare() {
  local version="${1:-}"
  (
    cd "${DIR}"
    poetry version "${version#"v"}"
  )
}

function task_usage {
  echo "Usage: $0 ..."
  exit 1
}

arg=${1:-}
shift || true
case ${arg} in
  clean) task_clean "$@" ;;
  build) task_build "$@" ;;
  test) task_test "$@" ;;
  format) task_format "$@" ;;
  release-artifacts) ;;
  release-prepare) task_release_prepare "$@" ;;
  release-test) ;;
  *) task_usage ;;
esac
